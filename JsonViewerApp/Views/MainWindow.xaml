<Window x:Class="JsonViewerApp.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:viewmodels="clr-namespace:JsonViewerApp.ViewModels"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:views="clr-namespace:JsonViewerApp.Views"
        mc:Ignorable="d" MinWidth="300" MinHeight="300"
        d:DataContext="{d:DesignInstance Type=viewmodels:MainViewModel, IsDesignTimeCreatable=True}"
        Title="JSON Viewer" Height="550" Width="800"
        Background="#F0F4F8" WindowStartupLocation="CenterScreen" ResizeMode="CanResizeWithGrip"
        BorderBrush="Transparent" AllowsTransparency="True" WindowStyle="None">
    <!-- Основной интерфейс -->
    <Border Background="White" CornerRadius="10" BorderThickness="2" BorderBrush="Black" Padding="10"
            MouseDown="DragWindow">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- Панель управления окном -->
            <views:WindowControls HorizontalAlignment="Right" VerticalAlignment="Top" />

            <!-- Панель кнопок для открытия файла и очистки -->
            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10">
                <Button Style="{StaticResource RoundedButton}" Content="Открыть JSON файл"
                        Command="{Binding OpenFileCommand}" Height="40" />
                <Button Style="{StaticResource RoundedButton}" Content="Очистить вывод"
                        Command="{Binding ClearCommand}" Height="40" Margin="10,0,0,0" />
                <Button Style="{StaticResource RoundedButton}"
                        Visibility="{Binding IsOpenSearchWindowButtonVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        Content="Поиск" Command="{Binding OpenSearchWindowCommand}" Height="40"
                        Margin="10,0,0,0" />
            </StackPanel>
            <Button Style="{StaticResource RoundedButton}" Grid.Row="1" HorizontalAlignment="Right"
                    Content="{Binding VirtualizationButtonText}"
                    Command="{Binding ToggleVirtualizationCommand}" Height="40"
                    Margin="10,0,0,0" VerticalAlignment="Center" />
            <!-- Панель для поиска, навигации и прочего -->
            <StackPanel
                Visibility="{Binding AreSearchControlsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Style="{StaticResource RoundedButton}"
                        Content="{Binding IsTreeExpanded, Converter={StaticResource BoolToExpandCollapseTextConverter}}"
                        Command="{Binding ToggleExpandCollapseCommand}"
                        Height="40" Margin="10,0,0,0" />
                <Border Background="White" CornerRadius="8" BorderThickness="1" BorderBrush="#D3D3D3" Margin="10,0,0,0">
                    <TextBox Width="200" Height="35"
                             Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource RoundedTextBoxWithTransparentBackground}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="GotFocus">
                                <behaviors:InvokeCommandAction Command="{Binding GotFocusCommand}" />
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="LostFocus">
                                <behaviors:InvokeCommandAction Command="{Binding LostFocusCommand}" />
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </TextBox>
                </Border>
                <Button Style="{StaticResource RoundedButton}" Content="Искать" Command="{Binding SearchCommand}"
                        Height="40" Margin="10,0,0,0" />
                <Button Style="{StaticResource RoundedButton}" Content="Предыдущий"
                        Visibility="{Binding AreNavigationButtonsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        Command="{Binding PreviousSearchResultCommand}"
                        Height="40" Margin="10,0,0,0" />
                <Button Style="{StaticResource RoundedButton}" Content="Следующий"
                        Visibility="{Binding AreNavigationButtonsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        Command="{Binding NextSearchResultCommand}"
                        Height="40" Margin="10,0,0,0" />
            </StackPanel>
            <!-- Прогресс-бар и сообщение о состоянии загрузки -->
            <ProgressBar Grid.Row="3" HorizontalAlignment="Stretch" Height="30" Minimum="0" Maximum="100"
                         Value="{Binding Progress}" Foreground="LightGreen"
                         Margin="10" />
            <TextBlock Grid.Row="3" Text="{Binding StatusMessage}" HorizontalAlignment="Center"
                       VerticalAlignment="Center" FontWeight="SemiBold"
                       FontSize="14" Foreground="Black" />
            <!-- Информация о результатах поиска -->
            <StackPanel Grid.Row="0" HorizontalAlignment="Left"
                        Visibility="{Binding IsSearchInfoVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                        Margin="0,0,0,10">
                <TextBlock Text="{Binding TotalMatches, StringFormat='Найдено результатов: {0}'}" FontWeight="SemiBold"
                           FontSize="14" Foreground="Black" />
                <TextBlock Text="{Binding CurrentMatch, StringFormat='Выделен результат: {0}'}" FontWeight="SemiBold"
                           FontSize="14" Foreground="Black" />
            </StackPanel>
            <!-- TreeView для отображения JSON структуры -->
            <Border Grid.Row="4" Padding="10" BorderBrush="Gray" BorderThickness="1" CornerRadius="8"
                    Background="#F0F4F8">
                <TreeView VirtualizingStackPanel.IsVirtualizing="{Binding IsVirtualizationEnabled}"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          ItemsSource="{Binding JsonTreeItems}">
                    <TreeView.ItemContainerStyle>
                        <!-- Передача DataContext окна через Tag в TreeViewItem -->
                        <Style TargetType="TreeViewItem">
                            <EventSetter Event="Selected" Handler="TreeViewItem_Selected" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="Tag"
                                    Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <!-- Привязка к командам через Tag -->
                                        <MenuItem Header="Копировать ключ"
                                                  Command="{Binding PlacementTarget.Tag.CopyNameCommand, 
                                                             RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  CommandParameter="{Binding Name}" />
                                        <MenuItem Header="Копировать значение"
                                                  Command="{Binding PlacementTarget.Tag.CopyValueCommand, 
                                                             RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  CommandParameter="{Binding Value}" />
                                        <MenuItem Header="Копировать ключ и значение"
                                                  Command="{Binding PlacementTarget.Tag.CopyNameAndValueCommand, 
                                                             RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  CommandParameter="{Binding .}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <!-- Шаблон для отображения элементов JSON -->
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition
                                        Width="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, Path=ActualWidth}" />
                                </Grid.ColumnDefinitions>

                                <!-- Текстовый блок для отображения имени свойства JSON -->
                                <TextBlock Grid.Column="0" Text="{Binding Name}" FontWeight="Bold"
                                           x:Name="NameTextBlock" Foreground="Black" />

                                <!-- Текстовый блок для отображения разделителя -->
                                <TextBlock Grid.Column="1" Text=": " x:Name="SeparatorTextBlock" Foreground="Black" />

                                <!-- Текстовый блок для отображения значения свойства JSON -->
                                <TextBlock TextWrapping="Wrap" Grid.Column="2" Text="{Binding Value}"
                                           Foreground="Black">
                                    <TextBlock.Margin>
                                        <MultiBinding Converter="{StaticResource LevelToMarginConverter}">
                                            <Binding Path="Level" />
                                            <!-- Уровень элемента -->
                                            <Binding ElementName="NameTextBlock" Path="ActualWidth" />
                                            <!-- Ширина Name -->
                                            <Binding ElementName="SeparatorTextBlock" Path="ActualWidth" />
                                            <!-- Ширина Separator -->
                                        </MultiBinding>
                                    </TextBlock.Margin>
                                </TextBlock>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Border>
        </Grid>
    </Border>
</Window>